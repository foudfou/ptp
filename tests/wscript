#! /usr/bin/env python
# Copyright (c) 2014 Foudil Br√©tel. All rights reserved.

def configure(ctx):
    ctx.env.TEST_DIR = ctx.path.get_src().abspath()


def build(ctx):
    sources = ctx.path.ant_glob('*.c')
    bldtests = ctx.path.get_bld()
    test_nodes = []
    for s in sources:
        name = s.name
        target = name[:-2]
        ctx.program(
            source   = name,
            target   = target,
            includes = ['.', ctx.env.SRC_DIR]
        )
        test_nodes.append(bldtests.make_node(target))
    ctx.stash['test_nodes'] = test_nodes

    if ctx.options.do_coverage:
        bldsrc  = bldtests.parent.make_node('src')
        # could also use --remove instead of --no-external
        # FIXME: add bldsrc
        # lcov_args = ' -c -d %s -d %s -d %s --no-external --quiet' % \
        #             (ctx.env.SRC_DIR, bldsrc.abspath(), bldtests.abspath())
        lcov_args = ' -c -d %s -d %s --no-external --quiet' % \
                    (ctx.env.SRC_DIR, bldtests.abspath())
        lcov_bin = ctx.env.LCOV[0]
        print(type(lcov_bin))
        ctx(name='lcov_ini', after='utest', always=True, rule=(
            lcov_bin+lcov_args+' -i -o ${env.LCOV_DIR}/run_base.info'))
        ctx(name='cov_run', after='lcov_ini', always=True, rule=
            '${SRC}', source=ctx.env.TARGET_APP_TEST)
        ctx(name='lcov_test', after='cov_run', always=True, rule=(
            lcov_bin+lcov_args+' -o ${env.LCOV_DIR}/run_test.info'))
        ctx(name='lcov_add', after='lcov_test', always=True, rule=(
            lcov_bin+' -a ${env.LCOV_DIR}/run_base.info'
            ' -a ${env.LCOV_DIR}/run_test.info'
            ' -o ${env.LCOV_DIR}/run_total.info'))
        ctx(name='cov_genhtml', always=True, after='lcov_add', rule=(
            ctx.env.GENHTML[0] + ' --output-directory ${env.LCOV_DIR}'
            ' ${env.LCOV_DIR}/run_total.info --quiet'))
